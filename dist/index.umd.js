!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(e.tubeify={})}(this,function(e){var n=function(e,n,t){this.tile=e,this.tiles_range=-1===e?Array.from(new Array(this.max_bin)).map(function(e,n){return n}):Array.from(new Array(e)).map(function(n,i){return Math.round(t*i/e)}),this.bin_length=n||0,this.max_bin=Number.isNaN(t)?-1:t};n.prototype.tiles=function(e){var n=this.tiles_range.length;return this.tiles_range.forEach(function(t,i){t<=e&&(n=i)}),n},n.prototype.tileify=function(e){e.forEach(function(e){var n=[],s=0,r=0;e.bins.forEach(function(i){i[0]===r+1||(n.push(t(s,r,e.id)),s=i[0]),r=i[0]}),n.push(t(s,r,e.id)),e.links.forEach(function(e){var t=i(e[0],n);n[t].sequenceNew[0].mismatches.push({type:"link",pos:e[0]-n[t].firstNodeOffset,seq:"L",query:e[1]});var s=i(e[1],n);n[s].sequenceNew[0].mismatches.push({type:"link",pos:e[1]-n[s].firstNodeOffset,seq:"L",query:e[0]})})});var n={};return n.nodes=[{name:"Layout",sequenceLength:this.max_bin}],n.tracks=[{id:0,name:"REF",sequence:["Layout"]}],n.reads=[],n;function t(e,n,t){return{firstNodeOffset:e,finalNodeCoverLength:n-e,mapping_quality:60,is_secondary:!1,sequence:["Layout"],sequenceNew:{0:{nodeName:"0",mismatches:[]}},type:"read",read_id:t,id:t}}function i(e,n){var t=function(e,n,i,s){var r=Math.floor((i+s)/2);return n==e[r][0]?e[r]:s-1===i?e[s][0]==n?e[s]:e[i]:n>e[r][0]?t(e,n,r,s):n<e[r][0]?t(e,n,i,r):void 0};return t(n,e,0,n.length-1)}},n.prototype.tubeify=function(e){var n=this,t=[],i={},s=0;e.forEach(function(e){void 0===i[e.name]&&(i[e.name]={}),i[e.name][e.bin_id]=e,s<e.bin_id&&(s=e.bin_id)}),-1===this.max_bin&&(this.max_bin=s);var r=-1,a=-1,u=-1;e.forEach(function(e){e.begins.forEach(function(i,s){u!==e.path_name?(r=0,u=e.path_name,a+=1):r+=1;var o=[{nodeName:String(e.bin_id),mismatches:[]}];e.begins[s][0]+1!==e.bin_id-1&&-1!==e.begins[s][0]&&o[0].mismatches.push({type:"link",pos:0,seq:"L",query:e.begins[s][0]+1}),e.ends[s][0]+1!==e.bin_id+1&&-1!==e.ends[s][0]&&o[0].mismatches.push({type:"link",pos:n.bin_length,seq:"L",query:e.ends[s][0]+1}),t.push({firstNodeOffset:0,finalNodeCoverLength:n.bin_length,mapping_quality:60,is_secondary:!1,sequence:[String(e.bin_id)],sequenceNew:o,type:"read",read_id:r,name:e.path_name,id:a})})});var o=-1,f=-1,c=[],d=[];t.forEach(function(e){(e.id!==f||parseInt(e.sequence[0])!==o+1)&&c.length>0?(d.push({firstNodeOffset:0,finalNodeCoverLength:c.length,mapping_quality:60,is_secondary:!1,sequence:c.map(function(e){return e.sequence[0]}),sequenceNew:c.map(function(e){return e.sequenceNew[0]}),type:"read",name:c[0].name,id:f}),f=e.id,c=[e]):e.id!==f||parseInt(e.sequence[0])!==o+1?(f=e.id,c=[e]):c.push(e),o=parseInt(e.sequence[0])}),c.length>0&&d.push({firstNodeOffset:0,finalNodeCoverLength:this.bin_length*c.length,mapping_quality:60,is_secondary:!1,sequence:c.map(function(e){return e.sequence[0]}),sequenceNew:c.map(function(e){return e.sequenceNew[0]}),type:"read",name:c[0].name,id:f}),t=d;var h={},p=Array.from(new Array(this.max_bin)).map(function(e,t){return{name:String(t+1),sequenceLength:n.bin_length}});return h.nodes=p,h.tracks=[{id:0,name:"REF",sequence:p.map(function(e){return e.name})}],h.reads=t,h},e.Tubeify=n});
//# sourceMappingURL=index.umd.js.map
